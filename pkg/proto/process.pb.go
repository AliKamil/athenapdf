// Code generated by protoc-gen-go. DO NOT EDIT.
// source: process.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Process struct {
	Converter        string             `protobuf:"bytes,1,opt,name=converter" json:"converter,omitempty"`
	ConverterOptions map[string]*Option `protobuf:"bytes,2,rep,name=converter_options,json=converterOptions" json:"converter_options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Conversion       *Conversion        `protobuf:"bytes,3,opt,name=conversion" json:"conversion,omitempty"`
	Uploader         string             `protobuf:"bytes,6,opt,name=uploader" json:"uploader,omitempty"`
	UploaderOptions  map[string]*Option `protobuf:"bytes,7,rep,name=uploader_options,json=uploaderOptions" json:"uploader_options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Fetcher          string             `protobuf:"bytes,11,opt,name=fetcher" json:"fetcher,omitempty"`
	FetcherOptions   map[string]*Option `protobuf:"bytes,12,rep,name=fetcher_options,json=fetcherOptions" json:"fetcher_options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Process) Reset()                    { *m = Process{} }
func (m *Process) String() string            { return proto1.CompactTextString(m) }
func (*Process) ProtoMessage()               {}
func (*Process) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *Process) GetConverter() string {
	if m != nil {
		return m.Converter
	}
	return ""
}

func (m *Process) GetConverterOptions() map[string]*Option {
	if m != nil {
		return m.ConverterOptions
	}
	return nil
}

func (m *Process) GetConversion() *Conversion {
	if m != nil {
		return m.Conversion
	}
	return nil
}

func (m *Process) GetUploader() string {
	if m != nil {
		return m.Uploader
	}
	return ""
}

func (m *Process) GetUploaderOptions() map[string]*Option {
	if m != nil {
		return m.UploaderOptions
	}
	return nil
}

func (m *Process) GetFetcher() string {
	if m != nil {
		return m.Fetcher
	}
	return ""
}

func (m *Process) GetFetcherOptions() map[string]*Option {
	if m != nil {
		return m.FetcherOptions
	}
	return nil
}

func init() {
	proto1.RegisterType((*Process)(nil), "proto.Process")
}

func init() { proto1.RegisterFile("process.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 295 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x51, 0x41, 0x4b, 0xc3, 0x30,
	0x18, 0xa5, 0xad, 0x5b, 0xdd, 0xd7, 0xcd, 0x75, 0x9f, 0x0a, 0xa1, 0x78, 0x28, 0x9b, 0x87, 0x9e,
	0x0a, 0xce, 0x8b, 0x78, 0x1d, 0x7a, 0x11, 0x74, 0x0b, 0x78, 0x96, 0x59, 0x33, 0x14, 0x47, 0x53,
	0xd2, 0x74, 0xb0, 0x9f, 0xee, 0x4d, 0x4c, 0xd2, 0xcc, 0x96, 0xde, 0x76, 0xea, 0xf7, 0xbd, 0xf7,
	0xf2, 0xde, 0x4b, 0x0a, 0xa3, 0x42, 0xf0, 0x8c, 0x95, 0x65, 0x5a, 0x08, 0x2e, 0x39, 0xf6, 0xd4,
	0x27, 0x0a, 0x33, 0x9e, 0xef, 0x98, 0x28, 0xbf, 0x78, 0xae, 0x89, 0x68, 0xc8, 0x0b, 0x69, 0xb7,
	0xe9, 0xcf, 0x09, 0xf8, 0x4b, 0x7d, 0x10, 0xaf, 0x60, 0xa0, 0xd5, 0x92, 0x09, 0xe2, 0xc4, 0x4e,
	0x32, 0xa0, 0x07, 0x00, 0x57, 0x30, 0xb1, 0xcb, 0x9b, 0xf6, 0x28, 0x89, 0x1b, 0x7b, 0x49, 0x30,
	0xbf, 0xd6, 0x66, 0xa9, 0x31, 0x4a, 0x17, 0xb5, 0xee, 0x45, 0xcb, 0x1e, 0x72, 0x29, 0xf6, 0x34,
	0xcc, 0x5a, 0x30, 0xde, 0x00, 0x1c, 0xea, 0x11, 0x2f, 0x76, 0x92, 0x60, 0x3e, 0x31, 0x5e, 0x0b,
	0x4b, 0xd0, 0x7f, 0x22, 0x8c, 0xe0, 0xb4, 0x2a, 0xb6, 0x7c, 0xfd, 0xc1, 0x04, 0xe9, 0xab, 0x8a,
	0x76, 0xc7, 0x67, 0x08, 0xeb, 0xd9, 0x16, 0xf4, 0x55, 0xc1, 0x59, 0xab, 0xe0, 0xab, 0x91, 0x35,
	0xfa, 0x8d, 0xab, 0x26, 0x8a, 0x04, 0xfc, 0x0d, 0x93, 0xd9, 0x27, 0x13, 0x24, 0x50, 0x51, 0xf5,
	0x8a, 0x4f, 0x30, 0x36, 0xa3, 0x0d, 0x1a, 0xaa, 0xa0, 0x69, 0x2b, 0xe8, 0x51, 0xab, 0x1a, 0x39,
	0x67, 0x9b, 0x06, 0x18, 0x51, 0xb8, 0xec, 0x7c, 0x30, 0x0c, 0xc1, 0xfb, 0x66, 0x7b, 0xf3, 0x27,
	0xfe, 0x46, 0x9c, 0x41, 0x6f, 0xb7, 0xde, 0x56, 0x8c, 0xb8, 0xea, 0xad, 0x46, 0x26, 0x4d, 0x9f,
	0xa2, 0x9a, 0xbb, 0x77, 0xef, 0x9c, 0x68, 0x05, 0x17, 0x5d, 0x77, 0x3c, 0xc6, 0x72, 0x09, 0xe7,
	0x1d, 0xb7, 0x39, 0xc2, 0xf1, 0xbd, 0xaf, 0x88, 0xdb, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8e,
	0xd1, 0x97, 0x46, 0xba, 0x02, 0x00, 0x00,
}
